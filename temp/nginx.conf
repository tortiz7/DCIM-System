# Define upstream server
upstream chatbot {
    server chatbot:8001;
    keepalive 32;  # Keep connections alive
}

# Gzip compression
gzip on;
gzip_comp_level 6;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
gzip_proxied any;
gzip_vary on;

server {
    listen 80;
    server_name _;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;
    
    # Increased timeouts
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
    send_timeout 300;
    
    # Increased buffer sizes
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Error handling
    proxy_next_upstream error timeout http_502;
    proxy_next_upstream_tries 3;
    
    # Add proper MIME types
    types {
        text/css css;
        application/javascript js;
    }

    # WebSocket endpoint
    location /ws/ {
        proxy_pass http://chatbot;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        # WebSocket specific headers
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
    }
    
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, no-transform";
        add_header Content-Type $content_type;
        try_files $uri $uri/ =404;
    }
    

    # Health check endpoint
    location /health/ {
        proxy_pass http://chatbot/health/;
        proxy_set_header Host $http_host;
        proxy_read_timeout 10s;
        access_log off;  # Don't log health checks
    }

    # Main application
    location / {
        proxy_pass http://chatbot;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Error handling for debugging
        error_page 502 /502.html;
        proxy_intercept_errors on;
        # Additional headers for security
        proxy_set_header X-Request-Start "t=${msec}";
    }

    # Custom error pages
    location = /502.html {
        return 502 'Server is starting up. Please try again in a moment.';
        add_header Content-Type text/plain;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
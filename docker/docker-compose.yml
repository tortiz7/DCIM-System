services:
  web:
    build:
      context: .
      dockerfile: prod-new.Dockerfile
    restart: always
    expose:
      - "8000"
    volumes:
      - ralph_media:/var/local/ralph/media
      - ralph_static:/usr/share/ralph/static
    environment:
      DATABASE_NAME: ${db_name}
      DATABASE_USER: ${db_user}
      DATABASE_PASSWORD: ${db_password}
      DATABASE_HOST: db  
      REDIS_HOST: redis  
      REDIS_PORT: 6379
      CHATBOT_ENABLED: "true"  # Quote boolean values
      CHATBOT_URL: "http://chatbot:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  chatbot:
    image: tortiz7/ralph_chatbot_v2
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./model:/app/model
    environment:
      RALPH_API_URL: "http://web:8000/api"
      RALPH_API_TOKEN: "${RALPH_API_TOKEN}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NVIDIA_VISIBLE_DEVICES: all
      CUDA_VISIBLE_DEVICES: "0"
    depends_on:
      web
      redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile  # Changed from Dockerfile-static
    restart: always
    ports:
      - "80:80"
    volumes:
      - ralph_media:/opt/media
      - ralph_static:/opt/static
    depends_on:
      web:
        condition: service_healthy
      chatbot:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Rest of services remain the same but add healthcheck conditions to depends_on
  db:
    platform: linux/amd64
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: ralph_ng
      MYSQL_ROOT_PASSWORD: ralph_ng
      MYSQL_USER: ralph_ng
      MYSQL_PASSWORD: ralph_ng
    volumes:
      - ralph_dbdata:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    platform: linux/amd64
    image: redis:3.0
    restart: always
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  inkpy:
    platform: linux/amd64
    image: allegro/inkpy:latest
    restart: always
    environment:
      REDIS_HOST: redis
      REDIS_PASSWORD: ""
      REDIS_PORT: 6379
      REDIS_DB: 0
    depends_on:
      redis:
        condition: service_healthy

volumes:
  ralph_dbdata:
  ralph_media:
  ralph_static: